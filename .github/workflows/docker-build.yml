name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
      directory:
        description: 'Directory to build Docker image'
        required: false
      platforms:
        description: 'Platforms to build for (e.g., linux/amd64,linux/arm64)'
        required: false
  pull_request:
    branches:
      - main

env:
  DOCKER_REGISTRY: registry.cn-hangzhou.aliyuncs.com
  DOCKER_ORG: myorg

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to private Docker registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_ALIYUN_USER }}
          password: ${{ secrets.DOCKER_ALIYUN_PW }}

      - name: Get list of Dockerfiles
        id: dockerfiles
        run: |
          if [ -z "${{ github.event.inputs.directory }}" ]; then
            files=$(find . -name 'Dockerfile')
          else
            files=${{ github.event.inputs.directory }}/Dockerfile
          fi
          echo "files=$files" >> $GITHUB_ENV

      - name: Generate Docker tags
        id: tags
        run: |
          tags=""
          for file in ${{ env.files }}; do
            if [ -f "$file" ]; then
              dir=$(dirname $file)
              image_name=$(basename $dir)
              tag="${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_ORG }}/${image_name}:latest"
              tags="${tags},${tag}"
            fi
          done
          echo "tags=${tags#,}" >> $GITHUB_ENV

      - name: Build and Push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ${{ github.workspace }}
          push: true
          platforms: ${{ github.event.inputs.platforms || 'linux/amd64,linux/arm64' }}
          tags: ${{ env.tags }}
        env:
          files: ${{ env.files }}
